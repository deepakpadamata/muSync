<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="AudioCreation.Scenario2_FileReceive"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AudioCreation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <!--<VisualState.Setters>
                        <Setter Target="loopToggle.(RelativePanel.Below)" Value="graphButton" />-->
                    <!--</VisualState.Setters>-->
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid x:Name="RootGrid" Margin="12,20,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,0,10">
                <TextBlock Style="{StaticResource SampleHeaderTextStyle}" x:Name="SampleHeader" Text="Stream Playback"/>
            </StackPanel>

            <!--Main content is scrollable-->
            <ScrollViewer VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto" Margin="0,-14,0,60" Grid.RowSpan="2">
                <RelativePanel HorizontalAlignment="Stretch" MinWidth="500">
                    <!--Input-Pipe-Output-->

                    <!--Start/Stop Graph-->
                    <!--<Button x:Name="graphButton" Content="Start Graph" Click="Graph_Click" MinWidth="120" MinHeight="45" IsEnabled="False" Margin="0,70,0,20"/>-->

                    <!--Playback Controls-->
                    <!--<ToggleSwitch x:Name="loopToggle" Header="Loop" IsOn="False" Toggled="LoopToggle_Toggled" IsEnabled="False" Margin="0,20,0,0"/>-->
                    <!--<Slider x:Name="playSpeedSlider" Header="Playback Speed" ValueChanged="PlaySpeedSlider_ValueChanged" Maximum="3" Minimum="0.5" Value="1" StepFrequency="0.1" Width="150" Margin="0,20,0,0" IsEnabled="False"/>-->

                    <TextBlock Style="{StaticResource BasicTextStyle}" VerticalAlignment="Bottom" Margin="0,130,0,0">Service name:</TextBlock>
                    <TextBox x:Name="ServiceNameForListener" Text="22112" Margin="0,160,0,0"/>
                    <TextBlock Style="{StaticResource BasicTextStyle}" VerticalAlignment="Bottom" Margin="0,200,0,0">Bind to Address:</TextBlock>
                    <ComboBox x:Name="AdapterList" AllowDrop="True" IsEnabled="True" Margin="0,230,0,0"/>
                    <Button x:Name="StartListener" Content="Start Listening" Click="StartListener_Click" Margin="0,270,0,0"/>
                </RelativePanel>
            </ScrollViewer>

            <!-- Status Block for providing messages to the user.  Use the
             NotifyUser() method to populate the message -->
            <Border x:Name="ErrorBorder" Background="Red" Grid.Row="2"/>
            <TextBlock x:Name="StatusBlock" Grid.Row="2" Margin="12, 10, 12, 10" Visibility="Collapsed"/>
        </Grid>
    </Grid>

</Page>
